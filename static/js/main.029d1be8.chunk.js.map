{"version":3,"sources":["background.jpg","GlobalStyle.js","Form/Header/styled.js","Form/Header/index.js","Form/Result/styled.js","Form/Result/index.js","Form/Info/styled.js","Form/Info/index.js","Form/styled.js","Form/index.js","useRatesData.js","Clock/styled.js","Clock/index.js","Clock/useCurrentTime.js","styled.js","App.js","reportWebVitals.js","index.js","theme.js"],"names":["GlobalStyle","createGlobalStyle","background","Title","styled","h1","theme","color","green","Header","title","Wrapper","div","black","Result","result","baseCurrency","sourceAmount","targetAmount","toFixed","currency","grey","Info","date","LabelText","span","Field","input","Button","button","white","Loading","p","Failure","red","Form","useState","setResult","amount","setAmount","setCurrency","status","ratesData","setRatesData","useEffect","setTimeout","a","axios","get","response","data","rates","base","useRatesData","onSubmit","e","preventDefault","rate","calculateResult","placeholder","type","required","step","value","onChange","target","as","Object","keys","map","formatDate","toLocaleString","undefined","weekday","hour","minute","second","day","month","Clock","Date","setDate","intervalId","setInterval","clearInterval","useCurrentDate","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.029d1be8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.4787abfa.jpg\";","import { createGlobalStyle } from \"styled-components\";\nimport background from \"./background.jpg\";\n\nexport const GlobalStyle = createGlobalStyle`\n    html {\n    box-sizing: border-box;\n    }\n\n    *, ::after, ::before {\n    box-sizing: inherit;\n    }\n\n    #root {\n    font-family: 'Lato', sans-serif;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-height: 100vh;\n    background-image: url(${background});\n    background-size: cover;\n    background-position: center;\n}`","import styled from \"styled-components\";\n\nexport const Title = styled.h1`\n    color: ${({ theme }) => theme.color.green};\n    text-align: center;\n`","import { Title } from \"./styled\";\n\nconst Header = ({ title }) => {\n    return (\n        <Title>{title}</Title>\n    );\n}\n\nexport default Header;","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    color: ${({ theme }) => theme.color.black};\n    text-align: center;\n`","import { Wrapper } from \"./styled\";\n\nconst Result = ({ result, baseCurrency }) => {\n    return (\n        <Wrapper>\n            {!!result && (\n                <>\n                    {result.sourceAmount} <strong>{baseCurrency}</strong> to\n                    {\" \"}\n                    {result.targetAmount.toFixed(2)} <strong>{result.currency}</strong>\n                </>\n            )}\n        </Wrapper>\n    );\n}\n\nexport default Result;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\ncolor: ${({ theme }) => theme.color.grey};\r\ntext-align: right;\r\nmargin-top: 10px;\r\n`;","import { Wrapper } from \"./styled\";\r\n\r\nconst Info = ({ date }) => {\r\n    return (\r\n        <Wrapper>\r\n            Aktualna tabela z dnia: {date}\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default Info;","import styled from \"styled-components\";\n\nexport const LabelText = styled.span`\n    display: inline-block;\n    width: 100%;\n    max-width: 150px;\n    margin-right: 5px;\n`\n\nexport const Field = styled.input`\n    border: 1px solid #ccc;\n    padding: 10px;\n    width: 100%;\n    max-width: 400px;\n    border-radius: 5px;\n`\n\nexport const Button = styled.button`\n    width: 100%;\n    border: none;\n    background-color: ${({ theme }) => theme.color.green};\n    color: ${({ theme }) => theme.color.white};\n    padding: 10px;\n    border-radius: 5px;\n   \n\n    &:hover {\n        filter: brightness(110%);\n        cursor: pointer;\n    }\n\n    &:active {\n        filter: brightness(120%);\n    }\n`\n\nexport const Loading = styled.p`\ncolor: ${({ theme }) => theme.color.green};\n`\n\nexport const Failure = styled.p`\ncolor: ${({ theme }) => theme.color.red}\n`\n\n\n","import Header from \"./Header\";\nimport Result from \"./Result\";\nimport Info from \"./Info\";\nimport {\n    LabelText,\n    Field,\n    Button,\n    Loading,\n    Failure,\n} from \"./styled\";\n\nimport { useState } from \"react\";\nimport { useRatesData } from \"../useRatesData\";\n\nconst Form = () => {\n    const [result, setResult] = useState();\n    const [amount, setAmount] = useState(\"\");\n    const [currency, setCurrency] = useState(\"EUR\");\n    const { rates, status, date, baseCurrency } = useRatesData();\n\n    const calculateResult = (amount, currency) => {\n        const rate = rates[currency]\n\n        setResult({\n            sourceAmount: +amount,\n            targetAmount: amount * rate,\n            currency,\n        });\n    }\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        calculateResult(amount, currency)\n    }\n\n    return (\n        <form onSubmit={onFormSubmit} >\n            <Header title=\"Kantor Online\" />\n            {status === \"loading\" ? (\n                <Loading>\n                    Ładuję dane... Poczekaj chwilę...\n                </Loading>\n            ) : (\n                status === \"error\" ? (\n                    <Failure>\n                        Coś poszło nie tak... Spróbuj ponownie później...\n                    </Failure>\n                ) : (\n                    <>\n                        <p>\n                            <label><LabelText>Kwota w zł*:</LabelText>\n                                <Field\n                                    placeholder=\"Wpisz kwotę w zł\"\n                                    type=\"number\"\n                                    required\n                                    step=\"0.01\"\n                                    value={amount}\n                                    onChange={({ target }) => setAmount(target.value)}\n                                />\n                            </label>\n                        </p>\n                        <p>\n                            <label><LabelText>Waluta:</LabelText>\n                                <Field\n                                    as=\"select\"\n                                    value={currency}\n                                    onChange={({ target }) => setCurrency(target.value)}\n                                >\n                                    {Object.keys(rates).map((currency) => (\n                                        <option\n                                            key={currency}\n                                            value={currency}\n                                        >\n                                            {currency}\n                                        </option>\n                                    ))}\n                                </Field>\n                            </label>\n                        </p>\n                        <p>\n                            <Button>Przelicz</Button>\n                        </p>\n                        <Result result={result} baseCurrency={baseCurrency} />\n                        <Info date={date} />\n                    </>\n                )\n            )\n            }\n        </form>\n    );\n}\n\nexport default Form;","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const useRatesData = () => {\r\n    const [ratesData, setRatesData] = useState({\r\n        status: \"loading\",\r\n    });\r\n    const apiURL = \"https://api.exchangerate.host/latest?base=PLN\";\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await axios.get(apiURL);\r\n                const { rates, date, base: baseCurrency } = response.data;\r\n\r\n                setRatesData({\r\n                    status: \"success\",\r\n                    rates,\r\n                    date,\r\n                    baseCurrency,\r\n                })\r\n\r\n            } catch {\r\n                setRatesData({\r\n                    status: \"error\",\r\n                })\r\n            }\r\n        };\r\n        setTimeout(fetchData, 1000);\r\n\r\n    }, []);\r\n\r\n    return ratesData;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    text-align: right;\n    color: ${({ theme }) => theme.color.grey};\n`","import { useCurrentDate } from \"./useCurrentTime\";\nimport { Wrapper } from \"./styled\";\n\nconst formatDate = date => date.toLocaleString(undefined, {\n    weekday: \"long\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    day: \"numeric\",\n    month: \"long\"\n})\n\nconst Clock = () => {\n    const date = useCurrentDate();\n\n    return (\n        <Wrapper className=\"clock\">\n            Dzisiaj jest\n            {\" \"}\n            {formatDate(date)}\n        </Wrapper>\n    );\n}\n\nexport default Clock;","import { useState, useEffect } from \"react\";\n\nexport const useCurrentDate = () => {\n    const [date, setDate] = useState(new Date());\n\n    useEffect(() => {\n        const intervalId = setInterval(() => {\n            setDate(new Date())\n        }, 1000)\n\n        return () => {\n            clearInterval(intervalId);\n        }\n    });\n\n    return date\n};","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    flex-basis: 700px;\n    margin: 20px;\n    padding: 40px;\n    background-color: ${({ theme }) => theme.color.white};\n    border-radius: 20px;\n    box-shadow: 0 0 30px black;\n`","import Form from \"./Form\";\nimport Clock from \"./Clock\";\nimport { Wrapper } from \"./styled\";\n\nfunction App() {\n\n    return (\n        <Wrapper>\n            <Clock />\n            <Form />\n        </Wrapper>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalStyle } from './GlobalStyle';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\n    color: {\n        white: \"#fff\",\n        black: \"#000\",\n        grey: \"#bbb\",\n        green: \"#2F9207\",\n        red: \"#FF0000\",\n    }\n};"],"sourceRoot":""}